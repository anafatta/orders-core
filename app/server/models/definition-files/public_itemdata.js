/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this model:
1. Create 'itemdata.js' file in 'definition-files-custom' directory located in this file's parent directory.
2. Copy the code below and paste it into 'itemdata.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('server/models/index.js'),
    model   = require('./itemdata.js'),
    util    = require('../utils.js')(model),
    Seq     = orm.Sequelize();

module.exports = model;

// Some utility methods:
util.getRelation("packitm-items").onDelete = 'CASCADE'; 
util.getAttribute("id").comment = 'This is the comment'; 

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "public.itemdata",
    options: {
        tableName: "itemdata",
        schema: "public",
        timestamps: false
    },
    attributes: {
        "id": {
            type: Seq.INTEGER,
            field: "id",
            primaryKey: true,
            allowNull: false,
            unique: "itemdata_pkey"
        },
        "nom": {
            type: Seq.CHAR(50),
            field: "nom",
            allowNull: false
        },
        "articulo": {
            type: Seq.INTEGER,
            field: "articulo",
            unique: "uk_articulo_color",
            references: "public.articulo",
            referencesKey: "articulo"
        },
        "color": {
            type: Seq.INTEGER,
            field: "color",
            unique: "uk_articulo_color",
            references: "public.color",
            referencesKey: "color"
        },
        "stkseg": {
            type: Seq.INTEGER,
            field: "stkseg"
        },
        "est": {
            type: Seq.INTEGER,
            field: "est"
        },
        "fecinv": {
            type: Seq.DATEONLY,
            field: "fecinv"
        }
    },
    relations: [{
        type: "hasMany",
        model: "public.packitm",
        schema: "public",
        table: "packitm",
        source: "generator",
        details: {
            as: "packitm-items",
            foreignKey: "itemdata",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.packpza",
        schema: "public",
        table: "packpza",
        source: "generator",
        details: {
            as: "packpzaItms",
            foreignKey: "itemdata",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.stksaldo",
        schema: "public",
        table: "stksaldo",
        source: "generator",
        details: {
            as: "fkStksaldoItemdata",
            foreignKey: "itemdata",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.stockunit",
        schema: "public",
        table: "stockunit",
        source: "generator",
        details: {
            as: "fkStockunitItemdata",
            foreignKey: "itemdata",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.stockunit",
        schema: "public",
        table: "stockunit",
        source: "generator",
        details: {
            as: "stockunitItemdataFkeys",
            foreignKey: "itemdata",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.articulo",
        schema: "public",
        table: "articulo",
        source: "generator",
        details: {
            as: "relatedArticulo",
            foreignKey: "articulo",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.color",
        schema: "public",
        table: "color",
        source: "generator",
        details: {
            as: "relatedColor",
            foreignKey: "color",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.articulo",
        schema: "public",
        table: "articulo",
        source: "generator",
        details: {
            as: "relatedArticulo",
            foreignKey: "articulo",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.color",
        schema: "public",
        table: "color",
        source: "generator",
        details: {
            as: "relatedColor",
            foreignKey: "color",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.packcab",
        schema: "public",
        table: "packcab",
        source: "generator",
        details: {
            as: "packitm-itemPackcabs",
            foreignKey: "itemdata",
            otherKey: "packcab_id",
            through: "packitm",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.packcab",
        schema: "public",
        table: "packcab",
        source: "generator",
        details: {
            as: "packpzaItmPackcabs",
            foreignKey: "itemdata",
            otherKey: "packcab_id",
            through: "packpza",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.unitload",
        schema: "public",
        table: "unitload",
        source: "generator",
        details: {
            as: "relatedFkStockunitItemdatumUnitloads",
            foreignKey: "itemdata",
            otherKey: "unitload",
            through: "stockunit",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.itemdata",
        schema: "public",
        table: "itemdata",
        source: "generator",
        details: {
            as: "relatedFkStockunitItemdatumItemdata",
            foreignKey: "itemdata",
            otherKey: "itemdata",
            through: "stockunit",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.itemdata",
        schema: "public",
        table: "itemdata",
        source: "generator",
        details: {
            as: "relatedStockunitItemdataFkeyItemdata",
            foreignKey: "itemdata",
            otherKey: "itemdata",
            through: "stockunit",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.unitload",
        schema: "public",
        table: "unitload",
        source: "generator",
        details: {
            as: "relatedStockunitItemdataFkeyUnitloads",
            foreignKey: "itemdata",
            otherKey: "unitload",
            through: "stockunit",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.unitload",
        schema: "public",
        table: "unitload",
        source: "generator",
        details: {
            as: "relatedFkStockunitItemdatumUnitloads",
            foreignKey: "itemdata",
            otherKey: "unitload",
            through: "stockunit",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.unitload",
        schema: "public",
        table: "unitload",
        source: "generator",
        details: {
            as: "relatedStockunitItemdataFkeyUnitloads",
            foreignKey: "itemdata",
            otherKey: "unitload",
            through: "stockunit",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }]
};