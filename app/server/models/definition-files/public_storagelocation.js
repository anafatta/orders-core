/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this model:
1. Create 'storagelocation.js' file in 'definition-files-custom' directory located in this file's parent directory.
2. Copy the code below and paste it into 'storagelocation.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('server/models/index.js'),
    model   = require('./storagelocation.js'),
    util    = require('../utils.js')(model),
    Seq     = orm.Sequelize();

module.exports = model;

// Some utility methods:
util.getRelation("fkUnitloadStoragelocations").onDelete = 'CASCADE'; 
util.getAttribute("id").comment = 'This is the comment'; 

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "public.storagelocation",
    options: {
        tableName: "storagelocation",
        schema: "public",
        timestamps: false
    },
    attributes: {
        "id": {
            type: Seq.INTEGER,
            field: "id",
            primaryKey: true,
            autoIncrement: true,
            allowNull: false,
            unique: "storagelocation_pkey"
        },
        "checkcapacity": {
            type: Seq.INTEGER,
            field: "checkcapacity"
        },
        "capacity": {
            type: Seq.INTEGER,
            field: "capacity"
        },
        "reservedcapacity": {
            type: Seq.INTEGER,
            field: "reservedcapacity"
        },
        "storagelocationstrategy": {
            type: Seq.INTEGER,
            field: "storagelocationstrategy"
        },
        "area": {
            type: Seq.INTEGER,
            field: "area",
            references: "public.area",
            referencesKey: "area"
        },
        "zona": {
            type: Seq.INTEGER,
            field: "zona",
            references: "public.zona",
            referencesKey: "zona"
        },
        "deposito": {
            type: Seq.INTEGER,
            field: "deposito",
            references: "public.deposito",
            referencesKey: "deposito"
        },
        "calle": {
            type: Seq.INTEGER,
            field: "calle",
            unique: "uk_calle_altura_piso_dto",
            references: "public.calle",
            referencesKey: "calle"
        },
        "altura": {
            type: Seq.INTEGER,
            field: "altura",
            unique: "uk_calle_altura_piso_dto"
        },
        "piso": {
            type: Seq.INTEGER,
            field: "piso",
            unique: "uk_calle_altura_piso_dto"
        },
        "dto": {
            type: Seq.INTEGER,
            field: "dto",
            unique: "uk_calle_altura_piso_dto"
        },
        "tipo": {
            type: Seq.INTEGER,
            field: "tipo"
        },
        "estado": {
            type: Seq.INTEGER,
            field: "estado"
        }
    },
    relations: [{
        type: "hasMany",
        model: "public.unitload",
        schema: "public",
        table: "unitload",
        source: "generator",
        details: {
            as: "fkUnitloadStoragelocations",
            foreignKey: "storagelocation",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.unitload",
        schema: "public",
        table: "unitload",
        source: "generator",
        details: {
            as: "unitloadStoragelocationFkeys",
            foreignKey: "storagelocation",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.area",
        schema: "public",
        table: "area",
        source: "generator",
        details: {
            as: "relatedArea",
            foreignKey: "area",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.deposito",
        schema: "public",
        table: "deposito",
        source: "generator",
        details: {
            as: "relatedDeposito",
            foreignKey: "deposito",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.zona",
        schema: "public",
        table: "zona",
        source: "generator",
        details: {
            as: "relatedZona",
            foreignKey: "zona",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.area",
        schema: "public",
        table: "area",
        source: "generator",
        details: {
            as: "relatedArea",
            foreignKey: "area",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.calle",
        schema: "public",
        table: "calle",
        source: "generator",
        details: {
            as: "relatedCalle",
            foreignKey: "calle",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.zona",
        schema: "public",
        table: "zona",
        source: "generator",
        details: {
            as: "relatedZona",
            foreignKey: "zona",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.storagelocation",
        schema: "public",
        table: "storagelocation",
        source: "generator",
        details: {
            as: "relatedFkUnitloadStoragelocationStoragelocations",
            foreignKey: "storagelocation",
            otherKey: "storagelocation",
            through: "unitload",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.storagelocation",
        schema: "public",
        table: "storagelocation",
        source: "generator",
        details: {
            as: "relatedUnitloadStoragelocationFkeyStoragelocations",
            foreignKey: "storagelocation",
            otherKey: "storagelocation",
            through: "unitload",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }]
};